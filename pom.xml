<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.vibrent</groupId>
  <artifactId>drc-service</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>drc-service</name>
  <description>DRC Service</description>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.1.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <!-- Upgrading log4j2 because of security vulnerability -->
    <!-- https://spring.io/blog/2021/12/10/log4j2-vulnerability-and-spring-boot -->
    <log4j2.version>2.17.0</log4j2.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>11</java.version>
    <javax.inject.version>1</javax.inject.version>
    <drc-server.version>1.2.0</drc-server.version>
    <jackson.version>2.10.1</jackson.version>
    <push.version>4.2.563</push.version>
    <oidc-oauth.version>2.3.0-Develop-SNAPSHOT</oidc-oauth.version>
    <jakarta-validation.version>2.0.2</jakarta-validation.version>
    <spring-kafka.version>2.5.3.RELEASE</spring-kafka.version>
    <mapstruct.version>1.3.0.Final</mapstruct.version>
    <testcontainers.version>1.15.2</testcontainers.version>
    <aggregate.report.dir>${project.build.directory}/coverage-reports/jacoco-aggregate/jacoco.xml
    </aggregate.report.dir>
    <jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec
    </jacoco.it.execution.data.file>
    <jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec
    </jacoco.ut.execution.data.file>

    <spring-security-config.version>5.3.3.RELEASE</spring-security-config.version>
    <spring-security-oauth2.version>2.3.6.RELEASE</spring-security-oauth2.version>
    <spring-security-jwt.version>1.1.1.RELEASE</spring-security-jwt.version>
    <lombok.version>1.18.10</lombok.version>
    <joda-time-version>2.10.4</joda-time-version>
    <mapstruct.version>1.3.1.Final</mapstruct.version>
    <quartz.version>2.3.0</quartz.version>
    <drc-connector.version>0.0.1-develop-12</drc-connector.version>
    <caffeine.version>3.0.3</caffeine.version>
    <micrometer-core.version>1.5.10</micrometer-core.version>
    <vxp.workflow.version>2.1.2-0-28</vxp.workflow.version>
    <vrp-dto.version>0.0.1-develop-latest</vrp-dto.version>
    <fhir.version>3.8.0</fhir.version>
    <sonar.coverage.exclusions>
      **/com/vibrent/drc/constants/*,
      **/com/vibrent/drc/converter/*,
      **/com/vibrent/drc/configuration/*,
      **/com/vibrent/drc/enumeration/*,
      **/com/vibrent/drc/exception/*,
      **/com/vibrent/drc/repository/*,
      **/com/vibrent/drc/dto/*,
      **/com/vibrent/drc/domain/*,
      **/com/vibrent/drc/domain/common/*,
      **/com/vibrent/drc/DrcServiceApplication*
    </sonar.coverage.exclusions>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-quartz</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
      <version>${caffeine.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${javax.inject.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-afterburner</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>5.3</version>
    </dependency>

    <dependency>
      <groupId>com.vibrent.vxp.drc</groupId>
      <artifactId>drc-server</artifactId>
      <version>${drc-server.version}</version>
      <scope>system</scope>
      <systemPath>${pom.basedir}/lib/drc-server-${drc-server.version}.jar</systemPath>
    </dependency>

    <dependency>
      <groupId>com.vibrent.vxp</groupId>
      <artifactId>push</artifactId>
      <version>${push.version}</version>
      <scope>system</scope>
      <systemPath>${pom.basedir}/lib/push-${push.version}.jar</systemPath>
    </dependency>

    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
      <version>${jakarta-validation.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
      <version>${spring-kafka.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <version>${spring-kafka.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-jdk8</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mysql</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.vibrent.vrp</groupId>
      <artifactId>oidc-auth</artifactId>
      <version>${oidc-oauth.version}</version>
      <scope>system</scope>
      <systemPath>${pom.basedir}/lib/oidc-auth-${oidc-oauth.version}.jar</systemPath>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${spring-security-config.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <version>${spring-security-config.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.security.oauth</groupId>
      <artifactId>spring-security-oauth2</artifactId>
      <version>${spring-security-oauth2.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-mapper-asl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-jwt</artifactId>
      <version>${spring-security-jwt.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
    </dependency>

      <!--   DATABASE -->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-data-jpa</artifactId>
      </dependency>

      <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <scope>runtime</scope>
      </dependency>

    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flyway.version}</version>
    </dependency>
     <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>1.4.197</version>
          <scope>test</scope>
      </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time-version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.json/json -->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20201115</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.google.apis/google-api-services-storage -->
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-storage</artifactId>
      <version>v1-rev171-1.25.0</version>
    </dependency>
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>${quartz.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>2.0.1.Final</version>
    </dependency>
    <dependency>
      <groupId>com.vibrenthealth.drc</groupId>
      <artifactId>drc-connector</artifactId>
      <version>${drc-connector.version}</version>
      <scope>system</scope>
      <systemPath>${pom.basedir}/lib/drc-connector-${drc-connector.version}.jar</systemPath>
    </dependency>
    <!-- Monitoring endpoint - Micrometer + Prometheus -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
      <version>${micrometer-core.version}</version>
    </dependency>

    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <version>${micrometer-core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vibrent.vxp</groupId>
      <artifactId>workflow</artifactId>
      <version>${vxp.workflow.version}</version>
      <scope>system</scope>
      <systemPath>${pom.basedir}/lib/workflow-${vxp.workflow.version}.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-structures-r4</artifactId>
      <version>${fhir.version}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-base</artifactId>
      <version>${fhir.version}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-structures-dstu2</artifactId>
      <version>${fhir.version}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-utilities</artifactId>
      <version>${fhir.version}</version>
    </dependency>
    <dependency>
      <groupId>dto</groupId>
      <artifactId>vrp-dto</artifactId>
      <version>${vrp-dto.version}</version>
      <scope>system</scope>
      <systemPath>${pom.basedir}/lib/vrp-dto-${vrp-dto.version}.jar</systemPath>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-data-jpa</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-validator</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.vibrent.vxp</groupId>
          <artifactId>push</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <executable>
            true
          </executable>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <release>11</release>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <configuration>
          <excludes>
            <exclude>com/vibrent/drc/constants/*</exclude>
            <exclude>com/vibrent/drc/configuration/*</exclude>
            <exclude>com/vibrent/drc/enumeration/*</exclude>
            <exclude>com/vibrent/drc/exception/*</exclude>
            <exclude>com/vibrent/drc/repository/*</exclude>
            <exclude>com/vibrent/drc/dto/*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <encoding>UTF-8</encoding>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>